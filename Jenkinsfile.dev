pipeline {
    agent any

    environment {
        name = 'demo-app'
        port = '8080:8080'
        ruta = 'D:/proyecto-spring/demo'
        DOCKER_CREDENCIAL = 'docker_credencial' // Reemplaza con el ID o nombre de tu credencial de Docker
    }

    stages {
        stage('Iniciar sesi√≥n en Docker') {
            steps {
                script {
                    dir(ruta){
                    withCredentials([usernamePassword(credentialsId: dockerRegistryCredentials, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u $DOCKER_USER -p $DOCKER_PASSWORD"
                        sh 'docker info'
                    }
                }
            }
        }
    }

        stage('Construir y empaquetar con Maven') {
            steps {
                script {
                    dir(ruta) {
                        sh 'mvn clean package'
                    }
                }
            }
        }

        stage('Construir imagen Docker') {
            steps {
                script {
                    dir(ruta) {
                        sh "docker build -t ${name} ."
                    }
                }
            }
        }

        stage('Docker images') {
            steps {
                script {
                    dir(ruta) {
                        sh 'docker images'
                    }
                }
            }
        }

        stage('Construir contenedor') {
            steps {
                script {
                    dir(ruta) {
                        sh "docker run -d --publish ${port} ${name}"
                    }
                }
            }
        }

        stage('Docker container') {
            steps {
                script {
                    dir(ruta) {
                        sh 'docker ps'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                echo 'Exito'
            }
        }
    }
}
